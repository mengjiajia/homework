#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <ndbm.h>
#include <assert.h>
#include <string.h>
#define DB_FILE "/tmp/dbm_test"  
#define ITEMS 2
struct test_data{      
        char misc[15];
        int value;
        char more[21];

};
int main()

{
        struct test_data items[ITEMS];
        struct test_data item_got;
        char key_to_use[20];
        int i, result;
        datum key_datum;
        datum data_datum;
        DBM *pDbm;
        pDbm = dbm_open(DB_FILE, O_RDWR | O_CREAT, 0666); 
        assert(pDbm != (DBM *)0);
        memset(items, '\0', sizeof(items)); 
        strncpy(items[0].misc, "First!", 15);
        items[0].value = 47;
        strncpy(items[0].more, "foo", 21);
        strncpy(items[1].misc, "Second!", 15);
        items[1].value = 13;
        strncpy(items[1].more, "bar", 21);
        for(i=0;i<ITEMS;i++){
                sprintf(key_to_use, "%c%c%d", items[i].misc[0], items[i].more[0], items[i].value); 
                key_datum.dptr = (void *)key_to_use;
                key_datum.dsize = strlen(key_to_use);
                data_datum.dptr = (void *)&items[i];
                data_datum.dsize = sizeof(struct test_data);
                result = dbm_store(pDbm, key_datum, data_datum, DBM_REPLACE);
                assert(result == 0);
        }
        sprintf(key_to_use, "Ff%d", 47);
        key_datum.dptr = (void *)key_to_use;
        key_datum.dsize = strlen(key_to_use);
        data_datum = dbm_fetch(pDbm, key_datum);  
        if(data_datum.dptr){
                printf("Data got\n");
                memcpy(&item_got, data_datum.dptr, data_datum.dsize);
                printf("Get item - %s %d %s\n", item_got.misc, item_got.value, item_got.more);
        } else
                printf("No data found for key %s\n", key_to_use);
        dbm_close(pDbm); 
        exit(0);

}
